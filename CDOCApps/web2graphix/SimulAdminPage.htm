<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="keywords" content="jQuery Button, CheckBox, Toggle Button, Repeat Button, Radio Button, Link Button, Button" />
    <meta name="description" content="The jqxButton widget allows you to display a button on the Web page." />
    <title id='Description'>The jqxButton widget allows you to display a button on the Web
        page.</title>  
     
      
    <link rel="stylesheet" href="thirdparty/jqxwidget3.0.4/styles/jqx.base.css" type="text/css" /> 
    <link rel="stylesheet" href="thirdparty/jqxwidget3.0.4/styles/jqx.energyblue.css" type="text/css" /> 
     <link rel="stylesheet" href="../CommonCSS/CDOCStyle.css">   
     <script type="text/javascript" src="thirdparty/jqxwidget3.0.4/jquery-1.10.2.min.js"></script>    
     <script type="text/javascript" src="thirdparty/jqxwidget3.0.4/gettheme.js"></script>
     <script type="text/javascript" src="thirdparty/jqxwidget3.0.4/jqxcore.js"></script> 
     <script type="text/javascript" src="thirdparty/jqxwidget3.0.4/jqx-all.js"></script> 
     <script type="text/javascript" src="../CommonJS/CDOCWAL_V2.js"></script> 
   
    <script type="text/javascript">
    sSessionData.prototype.name = 0; 
    sSessionData.prototype.status = 0; 
    sSessionData.prototype.teamlist = 0; 
    function sSessionData (){
    	sSessionData.prototype.name = 0; 
        sSessionData.prototype.status = 'inactive'; 
        sSessionData.prototype.teamlist = 0; 
    }
    var gSessionDataList =[]; 
    //var gCurrentSessionData = 0; 
    var gRowIndexClick = -1; 
    var gCurrentTeamSelected=0; 
    var gCurrentSessionDataIndex = -1; 
    var gTeamList = ['Team-A','Team-B','Team-C','Team-D','Team-E','Team-F','Team-G','Team-H'];
    $(document).ready(function() {
            WAL_Initialize();  
            UI_Initialize();              
        });

        function UI_Initialize()
        {
        	
            WAL_createTab('admintabs', '450', 'UI_TabSelectHandler');  
            var sessionList = ['Session-0', 'Session-1', 'Session-2', 'Session-3'];   
            WAL_createDropdownList('sessionlistDDL', '120', '24', true, sessionList, "UI_DDLHandler", '80');
            //create a list of Session data 
            for(var j=0; j < 4; j++)
            {
            	var sessiondata= new sSessionData(); 
            	sessiondata.name = 'Session-' + j;    
            	gSessionDataList.push(sessiondata); 
            }
            var JQSel = '#sessionnameIP'; 
            $(JQSel).jqxInput({height: 25, width: 100, minLength: 1, theme: gTheme}); 
            JQSel = '#sessionstatusIP'; 
            $(JQSel).jqxInput({height: 25, width: 100, minLength: 1, theme: gTheme}); 
            
            
            WAL_createDropdownListwithButton("teamlistDDL", '0','0',gTeamList, "UI_DDLHandler", '80', '80','addteambtn', 50, 24);
            
            WAL_createButton('addteambtn', '', 80, 26, true); 
            WAL_createButton('deleteteambtn', 'UI_BtnHandler', 110, 26, true); 
            
            WAL_createButton('activatesessionteambtn', 'UI_BtnHandler', 110, 26, true);
            WAL_createButton('deactivatesessionteambtn', 'UI_BtnHandler', 110, 26, true);
            
        }
        
        function UI_BtnHandler(btnNode)
        {        	
        	// happens only on UI but not at data structures level
        	if(btnNode.id == 'deleteteambtn')
        	{
        		if(-1 == gCurrentSessionDataIndex)
        			return; 
        		//determine the index 
        		for(var j = 0 ; j < gSessionDataList[gCurrentSessionDataIndex].teamlist.length; j++)
        		{
        			if(gCurrentTeamSelected == gSessionDataList[gCurrentSessionDataIndex].teamlist[j])
        			{
        				gSessionDataList[gCurrentSessionDataIndex].teamlist.splice(j,1); 
        				var tableNode = document.getElementById('TeamTable');
                        tableNode.deleteRow(gRowIndexClick);
                        return; 
        			}
        		}
        		
        		
        		
        	}
        	else
        		{
        		alert("Not Implemented"); 
        		}
        }
        function UI_TabSelectHandler(tabindex)
        {
        	
        }
        function UI_DDLHandler(Node, value)
        {
        	if(Node.id == 'sessionlistDDL' )
        	{
        		
        		gCurrentSessionDataIndex = UI_GetSessionDataIndex(value); 
        		if(gCurrentSessionDataIndex == -1)
        		{
        			alert("Session Data Not found");
        			return; 
        		}
        			
        		var JQSel = '#sessionnameIP'; 
        		$(JQSel).jqxInput('val', gSessionDataList[gCurrentSessionDataIndex].name);
               
                JQSel = '#sessionstatusIP'; 
                $(JQSel).jqxInput('val', gSessionDataList[gCurrentSessionDataIndex].status);
                
                //adding new tables 
                var tableNode = document.getElementById('TeamTable');
                var trnode =0; 
                var htmlstr =""; 
                UI_CleanUpTable(tableNode); 
                
                for(var k =0 ; k < gSessionDataList[gCurrentSessionDataIndex].teamlist.length; k++)
                {
                	 trnode = tableNode.insertRow(-1);
                     htmlstr = '<td>' + gSessionDataList[gCurrentSessionDataIndex].teamlist[k] + '<td><input type="radio" name="teamgroup" onclick="OnTableClick(event)" />';
                     trnode.innerHTML = htmlstr; 
                }               
        	}
        	else if(Node.id == 'teamlistDDL')
        	{
        		//add it to session list 
        		if(-1 == gCurrentSessionDataIndex)
        			return; 
        		if(!gSessionDataList[gCurrentSessionDataIndex].teamlist)
        			gSessionDataList[gCurrentSessionDataIndex].teamlist = new Array(); 
        		var retval  = UI_CheckIfEntryExist(gSessionDataList[gCurrentSessionDataIndex].teamlist, value);
        		if(retval == true)
        		{
        			alert("Entry Already Exist"); 
        			return
        		}
        		gSessionDataList[gCurrentSessionDataIndex].teamlist.push(value);       		
        		var tableNode = document.getElementById('TeamTable');
                var trnode = tableNode.insertRow(-1);
                var htmlstr = '<td>' + value + '<td><input type="radio" name="teamgroup" onclick="OnTableClick(event)" />';
                trnode.innerHTML = htmlstr; 
        	}        	
        }
        
        function UI_CheckIfEntryExist(array, value)
        {
        	for(var j=0; j < array.length; j++)
        	{
        		if(array[j] == value)
        			return true; 
        	}
        	return false; 
        }
        
        function UI_CleanUpTable(tableNode)
        {
        	var numRows = tableNode.rows.length;
        	if(numRows < 2)
        		return ; 
        	for(var k=0; k < numRows-1; k++)
        	{
        		tableNode.deleteRow(-1); 
        	}
        }
        function UI_GetSessionData(sessionName)
        {
        	for(var j =0; gSessionDataList.length; j++)
        	{
        		var sessionData = gSessionDataList[j]; 
        		if(sessionName == sessionData.name)
        			return sessionData; 
        	}
        	return 0; 
        }
        function UI_GetSessionDataIndex(sessionName)
        {
        	for(var j =0; gSessionDataList.length; j++)
        	{
        		var sessionData = gSessionDataList[j]; 
        		if(sessionName == sessionData.name)
        			return j; 
        	}
        	return -1; 
        }
        
        function UI_NumEditBoxValueChange(value, widgetnode)
        {
        	
        }
        function UI_CheckBoxHandler(event)
        {
        	
        }
        
        function OnTableClick(event) {
            var node = event.target;
            var prevsiblingnode = node.parentElement.previousElementSibling;
            var teamname = prevsiblingnode.innerHTML; 
            var trnode = node.parentElement.parentElement;
            if (trnode.nodeName.toUpperCase() != 'TR')
                return;
           // alert("Row clicked" + trnode.rowIndex + "Team name= " + teamname);
            gRowIndexClick = trnode.rowIndex; 
            gCurrentTeamSelected =  teamname; 
        }
    </script>
</head>

<body class='default'>      
 
   <div id='commonsection' style= "background-image: linear-gradient(0deg, #c6d6ec 15%,  #e0e9f5 75%); margin-bottom:10px" >
   <div id='welcomesection' style="text-align:center; font-size:larger; font-style:italic; font-weight:bolder">Welcome to the Marketing Simulation Gaming Admin Page</div>
   
   		
   </div>
   <div id='admintabs'>
         <ul>
             <li id='sessionmgmtTab'>Session Management</li> 
             <li id='DatamgmtTab'>Market Data Input</li>  
             <li id='TeamMgmtTab' style="margin-left: 15px;">Team Management</li>
                             
         </ul>                     
             <div id="sessionmgmtcontent">
             <div style='text-align:center'> 
             	<div style= 'display:inline-block; margin-left:2px; margin-top:12px; margin-right:3px'>Select Session<div id='sessionlistDDL' class='EDIT_BOX' type='TEAM_LIST' style='margin-top:10px'></div></div>
              </div>
              <div style='text-align:center'>              	
              	<div style= 'display:inline-block; margin-left:2px; margin-right:3px'><div id='teamlistDDL' class='EDIT_BOX' type='teamlist' ></div></div>
              	<input type="button" id='addteambtn' value="Add Team" />
              	<input type="button" id='deleteteambtn' value="Delete Team" onclick="UI_BtnHandler(btnNode)"/>
              	<input type="button" id='activatesessionteambtn' value="Activate" onclick="UI_BtnHandler(btnNode)"/>
              	<input type="button" id='deactivatesessionteambtn' value="Deactivate" onclick="UI_BtnHandler(btnNode)"/>
              </div>	
             	
            
             	<div style='display:inline-block;margin-top:5px; margin-left:5px;margin-right:3px;'>Session Name<input type="text" id="sessionnameIP" style='margin-left:9px;'/></div>
             	<div style='display:inline-block;margin-top:5px;margin-left:5px;margin-right:3px;'>Session Status<input type="text" id="sessionstatusIP" style='margin-left:5px;'/></div>
             	  <div>    	
	             	<table id='TeamTable' style= 'display:inline-block';>
				         <thead>
				          <tr>
				           <th id="Th1">Team Name
				           <th> Select           
				         <tbody>
				        <!-- 
				         <tr>
				           <td>Team-A<td><input type='radio' name='teamgroup' value='Team-A' onclick="OnTableClick(event)" />           
				          <tr>
				           <td>Team-B<td><input type='radio' name='teamgroup' value='Team-B' onclick="OnTableClick(event)" />  
				           <tr>
				           <td>Team-C<td><input type='radio' name='teamgroup' value='Team-C' onclick="OnTableClick(event)" />  
				           <tr>
				           -->
					</table>
				</div>
            	
             	
   </div>
			 <div id="datamgmtcontent">Data Manager Content</div>
             <div id="teammgmtcontent">
             	Team Management                 
             </div>
             
         </div>
   
 
</body>
</html>



                    
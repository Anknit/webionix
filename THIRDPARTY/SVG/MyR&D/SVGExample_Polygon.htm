<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>SVG Page </title>
    <script type="text/javascript">
    var gnSides= new Number(0); 
    var gnInternalAngle=new Number(0); //radian
    var glength = new Number(0);
    var gRadius = new Number(0); 
    sPoint.prototype.x = new Number(0);
    sPoint.prototype.y = new Number(0);
    function sPoint() {
        sPoint.prototype.x = new Number(0);
        sPoint.prototype.y = new Number(0);        
    }
    
        function OnDomBtnClick() {
            var svgNode = document.getElementById("SVG1");
            var text = svgNode.outerHTML;
            alert(text);
        }

        function OnToggleGrid(event) {
            var node= event.target;
            var state = node.getAttribute("data-gridshow");
            var svgbkgrnd = document.getElementById("background");

            if (state == "true") {
                node.setAttribute("data-gridshow", "false");
                svgbkgrnd.setAttribute("visibility", "hidden");
            }
            else {
                node.setAttribute("data-gridshow", "true");
                svgbkgrnd.setAttribute("visibility", "visible");
            }
        }
        function OnDrawPolygon(evt){
            //get number of sides 
            //get internal angle 
            //now compute the arrar of points for the polygon path
            //put some markers if requried 
            glength = new Number(80);
            gnSides = new Number(3); 
            DrawPolygon("polypath", 150, 100, gnSides, glength); 
        }
     
       
       function DrawPolygon(pathID, x, y, nSides, length) {
           gnInternalAngle = 2 * Math.PI / nSides;
           var startAngle = Math.PI / 2;
           var radius = new Number(length);
           radius = Math.round(radius / (2 * Math.sin(gnInternalAngle / 2))); 
           //  alert("Int Angle=" + gnInternalAngle) ;
           var nPointArray = [];
           var currPoint = new sPoint();
           currPoint.x = x;
           currPoint.y = y;
           var currAngle;
           var cx = new Number(x);
           var cy = new Number(y);
           var newPoint = ["M", currPoint.x, currPoint.y];

           for (var k = 0; k < nSides; k++) {

               currAngle = startAngle + (k * gnInternalAngle);
               currPoint.x = Math.round(cx + radius * Math.cos(currAngle));
               currPoint.y = Math.round(cy - radius * Math.sin(currAngle));
               newPoint = ["L", currPoint.x, currPoint.y];
               nPointArray.push(newPoint);

           }
           UpdatePolygonPath(pathID, nPointArray);

       }
      
       function UpdatePolygonPath(pathID, inputpathParam) {
           var pathNode = document.getElementById(pathID);
           var pathParam = "";          
           for (var k = 0; k < inputpathParam.length; k++) {
               if (k == 0)
                   pathParam += ("M" + inputpathParam[k][1] + " " + inputpathParam[k][2] + " ");
               else
                   pathParam += (inputpathParam[k][0] + inputpathParam[k][1] + " " + inputpathParam[k][2] + " ");
           }
           pathParam += "z";
           pathNode.setAttribute("d", pathParam);

           //alert("Path updated successfully"); 
       }
    </script>
</head>
<body>
<p>This is an example of Grid pattern</p>
<svg id="rootsvg1" width="600px" height="600px" version="1.1"  viewBox="0 0 600 600" preserveAspectRatio="none" xmlns:xlink="http://www.w3.org/1999/xlink" 
     xmlns="http://www.w3.org/2000/svg">

  <svg id="background" width="100%" height="100%" visibility="visble">
    <defs>
      <pattern id="gridpattern" patternUnits="userSpaceOnUse"  x="0" y="0" width="10" height="10"  viewBox="0 0 10 10" >
        <rect x="0" y="0" width="10" height="10" stroke="grey" stroke-width="0.5" fill="none"/>
      </pattern>
      <pattern id="bigrectpattern" patternUnits="userSpaceOnUse"  x="0" y="0" width="100" height="100"  viewBox="0 0 100 100" >
        <rect x="0" y="0" width="100" height="100" stroke="black" stroke-width="1" fill="url(#gridpattern)"/>
      </pattern>
      <marker id="marker1"  viewBox="0 0 10 10" refX="5" refY="5"  markerUnits="strokeWidth"  markerWidth="4" markerHeight="3" orient="auto">
            <circle cx="5" cy="5" r="5" fill="black"/>
        </marker>
        
    </defs>    
    <rect x="0" y="0" width="100%" height="100%"  fill="url(#bigrectpattern)"/>
  </svg>  
  <defs>
    <line id="baseline" x1="100" y1="100" x2="150" y2="100" stroke="red" stroke-width="3" fill="none" marker-start="url(#marker1)" /> 
  </defs>
  
 <path id="polypath" d="" fill="none" stroke="blue" stroke-width="3" marker-start="url(#marker1)" marker-mid="url(#marker1)"/>
  
</svg>

<button onclick="OnToggleGrid(event)"  data-gridshow="true">Toggle Grid</button>
<button onclick="OnDrawPolygon(event)" data-gridshow="true">Draw Polygon</button>
</body>
</html>
